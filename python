# 1. Print "Hello, World!"
print("Hello, World!")

# 2. Variables and basic arithmetic
x = 10
y = 5
z = x + y
print(z)

# 3. Conditional statements
if z > 15:
    print("Greater than 15")
elif z == 15:
    print("Equals 15")
else:
    print("Less than 15")

# 4. Loops
for i in range(5):
    print(i)

# 5. Functions
def square(num):
    return num**2

print(square(3))

# 6. Lists and list comprehensions
numbers = [1, 2, 3, 4, 5]
squared_numbers = [square(num) for num in numbers]
print(squared_numbers)

# 7. Dictionaries
person = {"name": "John", "age": 30, "city": "New York"}
print(person["name"])

# 8. Classes and objects
class Dog:
    def __init__(self, name, age):
        self.name = name
        self.age = age

    def bark(self):
        print("Woof!")

dog1 = Dog("Buddy", 2)
print(dog1.name)
dog1.bark()

# 9. File handling
with open("sample.txt", "w") as file:
    file.write("Hello, this is a sample text.")

with open("sample.txt", "r") as file:
    content = file.read()
    print(content)

# 10. Try-except for error handling
try:
    result = 10 / 0
except ZeroDivisionError:
    print("Division by zero is not allowed!")

# 11. Lambda functions
multiply = lambda x, y: x * y
print(multiply(2, 3))

# 12. Modules and imports
import math
print(math.sqrt(16))

# 13. List slicing
numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(numbers[2:7])

# 14. Set operations
set1 = {1, 2, 3}
set2 = {3, 4, 5}
print(set1.intersection(set2))

# 15. Tuple unpacking
x, y, z = 1, 2, 3
print(x, y, z)

# 16. Concatenate strings
greeting = "Hello, "
name = "John"
message = greeting + name
print(message)

# 17. Get user input
user_input = input("Enter your name: ")
print("Hello, " + user_input)

# 18. Random number generation
import random
random_number = random.randint(1, 100)
print(random_number)

# 19. Format string
name = "Alice"
age = 25
print(f"My name is {name} and I am {age} years old.")

# 20. List sorting
numbers = [4, 2, 8, 6, 1, 9]
numbers.sort()
print(numbers)

# 21. File handling with exception handling
try:
    with open("non_existent_file.txt", "r") as file:
        content = file.read()
except FileNotFoundError:
    print("File not found!")

# 22. Enumerate
fruits = ["apple", "banana", "cherry"]
for index, fruit in enumerate(fruits):
    print(index, fruit)

# 23. Break and continue
for i in range(10):
    if i == 3:
        continue
    if i == 8:
        break
    print(i)

# 24. List methods
numbers = [1, 2, 3, 4, 5]
numbers.append(6)
print(numbers)

# 25. Dictionary methods
person = {"name": "Alice", "age": 30}
person["city"] = "New York"
print(person)
